apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: java-spring-boot
  annotations:
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
    ootb.apps.tanzu.vmware.com/apidescriptor-ref: "true"
    kapp.k14s.io/change-rule: upsert after upserting servicebinding.io/ServiceBindings
  labels:
    app.kubernetes.io/part-of: java-spring-boot
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: web
    app.kubernetes.io/component: run
    carto.run/workload-name: java-spring-boot
spec:
  template:
    metadata:
      annotations:
        apps.tanzu.vmware.com/correlationid: https://github.com/robertocolella/awesome-25?sub_path=/
        autoscaling.knative.dev/maxScale: "3"
        autoscaling.knative.dev/metric: rps
        autoscaling.knative.dev/minScale: "0"
        autoscaling.knative.dev/target: "5"
        autoscaling.knative.dev/window: 120s
        boot.spring.io/actuator: http://:8081/actuator
        boot.spring.io/version: 3.1.4
        conventions.carto.run/applied-conventions: |-
          appliveview-sample/app-live-view-appflavour-check
          spring-boot-convention/auto-configure-actuators-check
          spring-boot-convention/spring-boot
          spring-boot-convention/spring-boot-graceful-shutdown
          spring-boot-convention/spring-boot-web
          spring-boot-convention/spring-boot-actuator
          spring-boot-convention/spring-boot-actuator-probes
          spring-boot-convention/app-live-view-appflavour-check
          spring-boot-convention/app-live-view-connector-boot
          spring-boot-convention/app-live-view-appflavours-boot
        developer.conventions/target-containers: workload
        kubectl.kubernetes.io/last-applied-configuration: |
          {"apiVersion":"carto.run/v1alpha1","kind":"Workload","metadata":{"annotations":{},"labels":{"app.kubernetes.io/part-of":"java-spring-boot","apps.tanzu.vmware.com/has-tests":"true","apps.tanzu.vmware.com/workload-type":"web"},"name":"java-spring-boot","namespace":"default"},"spec":{"build":{"env":[{"name":"BP_JVM_VERSION","value":"17"}]},"env":[{"name":"SPRING_CONFIG_IMPORT","value":"optional:configtree:${SERVICE_BINDING_ROOT}/config/"}],"params":[{"name":"annotations","value":{"autoscaling.knative.dev/maxScale":"3","autoscaling.knative.dev/metric":"rps","autoscaling.knative.dev/minScale":"0","autoscaling.knative.dev/target":"5","autoscaling.knative.dev/window":"120s","sidecar.opentelemetry.io/inject":"true"}},{"name":"testing_pipeline_matching_labels","value":{"apps.tanzu.vmware.com/language":"java","apps.tanzu.vmware.com/pipeline":"test"}}],"resources":{"limits":{"memory":"1Gi"},"requests":{"cpu":1,"memory":"1Gi"}},"serviceClaims":[{"name":"config","ref":{"apiVersion":"services.apps.tanzu.vmware.com/v1alpha1","kind":"ResourceClaim","name":"java-spring-boot-config"}}],"source":{"git":{"ref":{"branch":"main"},"url":"https://github.com/robertocolella/awesome-25"}}}}
        sidecar.opentelemetry.io/inject: "true"
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: java-spring-boot
        apps.tanzu.vmware.com/auto-configure-actuators: "true"
        apps.tanzu.vmware.com/has-tests: "true"
        apps.tanzu.vmware.com/workload-type: web
        carto.run/workload-name: java-spring-boot
        conventions.carto.run/framework: spring-boot
        tanzu.app.live.view: "true"
        tanzu.app.live.view.application.actuator.path: actuator
        tanzu.app.live.view.application.actuator.port: "8081"
        tanzu.app.live.view.application.flavours: spring-boot
        tanzu.app.live.view.application.name: java-spring-boot
    spec:
      containers:
      - env:
        - name: SPRING_CONFIG_IMPORT
          value: optional:configtree:${SERVICE_BINDING_ROOT}/config/
        - name: JAVA_TOOL_OPTIONS
          value: -Dmanagement.endpoint.health.probes.add-additional-paths="true" -Dmanagement.endpoint.health.show-details="always" -Dmanagement.endpoints.web.base-path="/actuator" -Dmanagement.endpoints.web.exposure.include="*" -Dmanagement.health.probes.enabled="true" -Dmanagement.server.port="8081" -Dserver.port="8080" -Dserver.shutdown.grace-period="24s"
        image: colellar.azurecr.io/tap/supplychain/java-spring-boot-default@sha256:5079a30533940eff6a67695cf4102a8c2a540344b9c1a3e3f8475aa1baf2d4a5
        livenessProbe:
          httpGet:
            path: /livez
            port: 8080
            scheme: HTTP
        name: workload
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8080
            scheme: HTTP
        resources:
          limits:
            memory: 1Gi
          requests:
            cpu: "1"
            memory: 1Gi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        startupProbe:
          httpGet:
            path: /readyz
            port: 8080
            scheme: HTTP
      serviceAccountName: default

